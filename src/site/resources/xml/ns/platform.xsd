<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
    xmlns="http://codeteapot.github.io/glassfish-haa"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.w3.org/2001/XMLSchema https://www.w3.org/2001/XMLSchema.xsd"
    targetNamespace="http://codeteapot.github.io/glassfish-haa"
    elementFormDefault="qualified">
    
    <xs:include schemaLocation="network.xsd"/>
    <xs:include schemaLocation="machine.xsd"/>
    
    <xs:complexType name="PlatformType">
        <xs:all>
            
            <xs:element name="listen">
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:choice>
                            <xs:element name="docker" type="DockerPortType"/>
                        </xs:choice>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            
            <xs:element name="catalog">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="profile">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="name" type="ProfileNameType"/>
                                    <xs:element name="network" type="NetworkNameType"/>
                                    <xs:element name="port" type="xs:unsignedInt" minOccurs="0"/>
                                    <xs:element name="realm" minOccurs="0">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="user">
                                                    <xs:complexType>
                                                        <xs:sequence>
                                                            <xs:element name="name" type="xs:string"/>
                                                            <xs:element name="identityOnly" type="AuthenticationIdentityName" minOccurs="0"/>
                                                            <xs:element name="password" type="AuthenticationPasswordName" minOccurs="0" maxOccurs="unbounded"/>
                                                        </xs:sequence>
                                                    </xs:complexType>
                                                </xs:element>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="ready">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="username" type="xs:string"/>
                                                <xs:element name="command" minOccurs="0">
                                                    <xs:complexType>
                                                        <xs:choice>
                                                            <xs:element name="args" type="xs:string"/>
                                                            <xs:sequence>
                                                                <xs:element name="arg" type="xs:string" maxOccurs="unbounded"/>
                                                            </xs:sequence>
                                                        </xs:choice>
                                                    </xs:complexType>
                                                </xs:element>
                                                <xs:element name="initialDelay" type="xs:duration" minOccurs="0"/>
                                                <xs:element name="retryDelay" type="xs:duration" minOccurs="0"/>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="pool" minOccurs="0">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="idleTimeout" type="xs:duration" minOccurs="0"/>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:choice>
                                        <xs:element name="define" type="MachineType"/>
                                        <xs:element name="include">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element name="file" type="xs:string"/>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element name="fetch">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element name="username" type="xs:string"/>
                                                    <xs:choice>
                                                        <xs:element name="file" type="xs:string"/>
                                                    </xs:choice>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:choice>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            
            <xs:element name="authentication">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="identities" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="identity">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="name" type="AuthenticationIdentityName" minOccurs="0"/>
                                                <xs:choice>
                                                    <xs:element name="export" type="xs:anyURI"/>
                                                </xs:choice>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="passwords" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="name" type="AuthenticationPasswordName"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>
                </xs:complexType>
            </xs:element>
            
        </xs:all>
    </xs:complexType>
    
    <xs:complexType name="DockerPortType">
        <xs:all>
            <xs:element name="group" type="xs:string"/>
            <xs:element name="host" minOccurs="0" type="xs:anyURI"/>
            <xs:element name="eventsTimeout" minOccurs="0" type="xs:duration"/>
            <xs:element name="roles">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="role" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="name" type="xs:string"/>
                                    <xs:element name="profile" type="ProfileNameType"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:all>
    </xs:complexType>
    
    <xs:simpleType name="NetworkNameType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    
    <xs:simpleType name="ProfileNameType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    
    <xs:simpleType name="AuthenticationIdentityName">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    
    <xs:simpleType name="AuthenticationPasswordName">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    
</xs:schema>
